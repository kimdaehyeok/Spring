<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

<!-- Spring Default Security -->
<!--	<http auto-config="true">
		<intercept-url pattern="/admin**" access="ROLE_USER" />
	</http>

 	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="kdh" password="123456" authorities="ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager> -->

<!-- 
	1. login-page : 로그인 페이지 주소 지정 
	2. default-target-url : 로그인 성공인 경우 호출할 주소 지정
	3. authentication-failure-url : 로그인 실패인 경우 호출할 주소  지정
	
	참고) Spring Security는 인증을 하지 않은 상태에서 권한이 필요한 화면을 접근할려고 할 경우 로그인 화면을 띄운다.
 -->
 
<http auto-config="true" use-expressions="true">
 	<intercept-url pattern="/hello" access = "hasAnyRole('ROLE_USER','ROLE_ADMIN')"/> 
 	<intercept-url pattern="/user" access = "hasAnyRole('ROLE_USER','ROLE_ADMIN')"/> 
 	<intercept-url pattern="/admin" access = "hasRole('ROLE_ADMIN')"/>
	<intercept-url pattern="/**" access="permitAll"/>
	
	<form-login
		login-page="/login"
		default-target-url="/admin"
		authentication-failure-url="/login?error"
		username-parameter="username"
		password-parameter="password"
	/>
	
	<access-denied-handler error-page="/accessDenied" />
	<logout logout-success-url="/login?logout"/>
	<csrf/> <!-- Enable the Cross Site Request Forgery (CSRF) protection -->
</http>

<authentication-manager>
	<!-- <authentication-provider> -->
<!-- <user-service>
 			<user name="user" password="user" authorities="ROLE_USER"/>
			<user name="admin" password="admin" authorities="ROLE_ADMIN"/> 
		</user-service> -->
<!-- 	<jdbc-user-service data-source-ref="oracleDataSource"
 				users-by-username-query = "select username, password, enabled from users where username = ?"
 				authorities-by-username-query = "select username,role from user_roles where username = ? " /> -->
		  				
	<!-- </authentication-provider> -->
	
	<authentication-provider ref="authenticationProvider"/>

</authentication-manager>

</beans:beans>